{"ast":null,"code":"import _defineProperty from \"/Users/mac/Desktop/musicshare/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/mac/Desktop/musicshare/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/mac/Desktop/musicshare/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/musicshare/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Desktop/musicshare/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/musicshare/client/src/components/Auth/Login.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ($username: String!, $password: String!) {\\n    tokenAuth(username: $username, password: $password){\\n      token \\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport Error from \"../Shared/Error\";\nimport { blue } from '@material-ui/core/colors';\n\nvar Login = function Login(_ref) {\n  var classes = _ref.classes,\n      setNewUser = _ref.setNewUser;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event, tokenAuth, client) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return tokenAuth();\n\n            case 3:\n              res = _context.sent;\n              localStorage.setItem('authToken', res.data.tokenAuth.token);\n              client.writeData({\n                data: {\n                  isLoggedIn: true\n                }\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleSubmit(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.blue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Lock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Login as Existing User\"), React.createElement(Mutation, {\n    mutation: LOGIN_MUTATION,\n    variables: {\n      username: username,\n      password: password\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, function (tokenAuth, _ref3) {\n    var loading = _ref3.loading,\n        error = _ref3.error,\n        called = _ref3.called,\n        client = _ref3.client;\n    return React.createElement(\"form\", {\n      onSubmit: function onSubmit(event) {\n        return handleSubmit(event, tokenAuth, client);\n      },\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      id: \"username\",\n      onChange: function onChange(event) {\n        return setUsername(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      id: \"password\",\n      type: \"password\",\n      onChange: function onChange(event) {\n        return setPassword(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      disabled: loading || !username.trim() || !password.trim(),\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, loading ? \"Logging in...\" : \"Login\"), React.createElement(Button, {\n      onClick: function onClick() {\n        return setNewUser(true);\n      },\n      color: \"secondary\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"New user? Register here\"), error && React.createElement(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  })));\n};\n\nvar LOGIN_MUTATION = gql(_templateObject());\n\nvar styles = function styles(theme) {\n  return {\n    root: _defineProperty({\n      width: \"auto\",\n      display: \"block\",\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(\"md\"), {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }),\n    blue: {\n      color: theme.palette.getContrastText(blue[500]),\n      backgroundColor: blue[500]\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: theme.spacing.unit * 2\n    },\n    title: {\n      marginTop: theme.spacing.unit * 2,\n      color: theme.palette.secondary.main\n    },\n    avatar: {\n      margin: theme.spacing.unit,\n      backgroundColor: theme.palette.primary.main\n    },\n    form: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 2,\n      marginBottom: theme.spacing.unit * 2\n    }\n  };\n};\n\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/mac/Desktop/musicshare/client/src/components/Auth/Login.js"],"names":["React","useState","Mutation","gql","withStyles","Typography","Avatar","FormControl","Paper","Input","InputLabel","Button","Lock","Error","blue","Login","classes","setNewUser","username","setUsername","password","setPassword","handleSubmit","event","tokenAuth","client","preventDefault","res","localStorage","setItem","data","token","writeData","isLoggedIn","root","paper","LOGIN_MUTATION","loading","error","called","form","target","value","trim","submit","styles","theme","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","color","palette","getContrastText","backgroundColor","marginTop","flexDirection","alignItems","padding","title","secondary","main","avatar","margin","primary","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport Error from \"../Shared/Error\";\nimport {blue} from '@material-ui/core/colors';\n\nconst Login = ({ classes, setNewUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async (event, tokenAuth, client) => {\n    event.preventDefault();\n    const res = await tokenAuth();\n    localStorage.setItem('authToken', res.data.tokenAuth.token);\n    client.writeData({ data: { isLoggedIn: true } });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.blue}>\n          <Lock />\n        </Avatar >\n        <Typography variant=\"title\">\n          Login as Existing User\n        </Typography>\n        <Mutation mutation={LOGIN_MUTATION}\n          variables={{ username, password }}\n        >\n          {(tokenAuth, {loading, error, called, client}) => {\n            return (\n              <form onSubmit={event => handleSubmit(event, tokenAuth, client)} className={classes.form}>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"username\">\n                    Username\n                  </InputLabel>\n                  <Input id=\"username\" onChange={event => setUsername(event.target.value)} />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"password\">\n                    Password\n                  </InputLabel>\n                  <Input id=\"password\" type=\"password\" onChange={event => setPassword(event.target.value)} />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  disabled={loading || !username.trim() || !password.trim()}\n                  color=\"primary\" className={classes.submit}\n                >\n                  {loading ? \"Logging in...\" : \"Login\"}\n                </Button>\n                <Button\n                  onClick={() => setNewUser(true)}\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  fullWidth\n                >\n                  New user? Register here\n                </Button>\n\n                {error && <Error error={error} />}\n              </form>\n            );\n          }}\n        </Mutation>\n      </Paper>\n    </div>\n  );    \n};\n\nconst LOGIN_MUTATION = gql`\n  mutation ($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password){\n      token \n    }\n  }\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  blue: {\n    color: theme.palette.getContrastText(blue[500]),\n    backgroundColor: blue[500],\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}