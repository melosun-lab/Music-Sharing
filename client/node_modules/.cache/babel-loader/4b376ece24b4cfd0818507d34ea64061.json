{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mac/Desktop/musicshare/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Desktop/musicshare/client/src/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        isLoggedIn @client\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ApolloProvider, Query } from 'react-apollo';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport Auth from './components/Auth';\nvar client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql/',\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: function request(operation) {\n    var token = localStorage.getItem('authToken') || \"\";\n    operation.setContext({\n      headers: {\n        Authorization: \"JWT \".concat(token)\n      }\n    });\n  },\n  clientState: {\n    defaults: {\n      isLoggedIn: !!localStorage.getItem('authToken')\n    }\n  }\n});\nvar IS_LOGGED_IN_QUERY = gql(_templateObject());\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(Query, {\n  query: IS_LOGGED_IN_QUERY,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, function (_ref) {\n  var data = _ref.data;\n  return data.isLoggedIn ? React.createElement(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/mac/Desktop/musicshare/client/src/index.js"],"names":["React","ReactDOM","Root","serviceWorker","ApolloProvider","Query","ApolloClient","gql","Auth","client","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","Authorization","clientState","defaults","isLoggedIn","IS_LOGGED_IN_QUERY","render","data","document","getElementById","unregister"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAAQC,cAAR,EAAwBC,KAAxB,QAAoC,cAApC;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,GAAG,EAAE,gCADuB;AAE5BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GAFc;AAK5BC,EAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AAClB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,EAAnD;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqB;AACjBC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,gBAASL,KAAT;AADR;AADQ,KAArB;AAKH,GAZ2B;AAa5BM,EAAAA,WAAW,EAAE;AACTC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAE,CAAC,CAACP,YAAY,CAACC,OAAb,CAAqB,WAArB;AADR;AADD;AAbe,CAAjB,CAAf;AAoBA,IAAMO,kBAAkB,GAAGjB,GAAH,mBAAxB;AAMAN,QAAQ,CAACwB,MAAT,CACI,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEhB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEe,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK;AAAA,MAAGE,IAAH,QAAGA,IAAH;AAAA,SAAcA,IAAI,CAACH,UAAL,GAAkB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAA6B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C;AAAA,CADL,CADJ,CADJ,EAMII,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ,E,CASA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {ApolloProvider, Query} from 'react-apollo';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport Auth from './components/Auth';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:8000/graphql/',\n    fetchOptions: {\n        credentials: \"include\"\n    },\n    request: operation => {\n        const token = localStorage.getItem('authToken') || \"\"\n        operation.setContext({\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n    },\n    clientState: {\n        defaults: {\n            isLoggedIn: !!localStorage.getItem('authToken')\n        }\n    }\n});\n\nconst IS_LOGGED_IN_QUERY = gql`\n    query {\n        isLoggedIn @client\n    }\n`\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Query query={IS_LOGGED_IN_QUERY}>\n            {({ data }) => data.isLoggedIn ? <Root /> : <Auth />}\n        </Query>\n    </ApolloProvider>, \n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}